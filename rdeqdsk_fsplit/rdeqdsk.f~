      subroutine rdeqdsk(ifnamein,imfit,mw,mh,ier)

c**********************************************************************
c**                                                                  **
c**     MAIN PROGRAM:  MHD FITTING CODE                              **
c**                                                                  **
c**                                                                  **
c**     SUBPROGRAM DESCRIPTION:                                      **
c**          weqdsk reads  out the GAQ type eqdsk.                   **
c**                                                                  **
c**     CALLING ARGUMENTS:                                           **
c**                                                                  **
c**     REFERENCES:                                                  **
c**          (1)                                                     **
c**          (2)                                                     **
c**                                                                  **
c**     RECORD OF MODIFICATION:                                      **
c**          29/06/83..........first created                         **
c**          02/02/99..........modified by DSD for PPPL orbit code   **
c**                                                                  **
c**                                                                  **
c**********************************************************************

      implicit real*8 (a-h, o-z)

      save
      include 'eparmdu129.h'

c      parameter (ntime=8,nsilop=41,magpri=29,mbdry=700,nrsp=200)
c      parameter (nlimit=300)
c      parameter (nw=129,nh=129,nwnh=nw*nh)
c      parameter (npoint=700)
      parameter (npitch=8*nlimit)
c      parameter (nh2=2*nh,nwrk=2*(nw+1)*nh)
c      parameter (kubicx = 4, kubicy = 4, lubicx = nw - kubicx + 1,
c     .           lubicy = nh - kubicy + 1,
c     .           kujunk = kubicx*kubicy*lubicx*lubicy)
c     common/cwork3/c(2,nw,nh2),wk(nwrk),copy(nw,nh)
      common/cwork3/c(kubicx,lubicx,kubicy,lubicy),wk(nwrk),
     .         copy(nw,nh),bkx(lubicx+1),bky(lubicy+1),
     .         lkx,lky
      common/mcom/rmaxis,zmaxis
      common/limmm/xlmin,xlmax,ylmin,ylmax,radum
      common/cpitch/ipitch,tanbn(npitch),angbn(npitch),sisibn(npitch)
      common/input1/icondn,itek,kdata,ico2,itrace,ierchk,iconvr,ixray
      common/cwork1/psirz(nw,nh)
      common/parame/volp(nw),pprime(nw),pres(nw),ffprim(nw),fpol(nw)
      common/consta/pi,tmu,twopi,ioption,ipress,idolim,isurf
      common/nio/nin,nout,ntty,nrsppc,nrspfc,nttyo,neqdsk,nffile,nsave
      common/limite/limitr,xlim(nlimit),ylim(nlimit)
      common/cffol/qpsi(nw),bfpol(nw),cfpol(nw),dfpol(nw),mwfpol,
     .             rbdry(mbdry),zbdry(mbdry),nbdry,xxxsi(nw),sifm,sifb
     .            ,rzero,bzero,piii,qout95,pcurrt(nwnh)
      common/ccase/case(6)
      common/vtor/presw(nw),preswp(nw),kvtor,rvtor,cwrmid(nw)
     .            ,prw(nw),wpsi(nwnh),presst(nwnh),pressw(nwnh)
      common/cerror/delerr
      common/gtable/rgrid(nw),zgrid(nh)
      common/cgrid/darea,drgrid,dzgrid,qmaxis,cratio,dfsqe
      common/cpsi/psi(nwnh),psibry,simag,sidif,xpsi(nwnh),eouter
      common /dsdmhd/ pr(nw), prp(nw), ffp(nw)

      character ifnamein*60,ifname*60,case*10,efitd65*32
      character nshot5*5,nshot6*6,nntime*4,vernum*6,nine*1
      dimension workk(nw),coils(nsilop),expmp2(magpri)
     .  ,xsi(nw),bfp(nw),cfp(nw),dfp(nw),pds(6),brsp(nrsp),prexp(1)
     .  ,bpp(nw),cpp(nw),dpp(nw),fwtsi(nsilop)
     .  ,bpr(nw),cpr(nw),dpr(nw),bqpsi(nw),cqpsi(nw),dqpsi(nw)

      dimension bprwp(nw),cprwp(nw),dprwp(nw)
      dimension bprw(nw),cprw(nw),dprw(nw),pressu(1)
      dimension curmid(nw)

c  CURMID Work array (originally argument of this routine)

      namelist/out1/ishot,itime,betap0,rzero,qenp,enp,emp,plasma,
     .     expmp2,coils,prexp,btor,rcentr,brsp,icurrt,rbdry,zbdry,
     .     nbdry,fwtsi,fwtcur,mxiter,nxiter,limitr,xlim,ylim,error,
     .     iconvr,ibunmn
      data efitd65/'PHYS_DATA:[D3PHYS.DIIID.EFITD65]'/

c  Stuff below is spliced in from old WEQDSK routine obtained from Bill Heidbrink

      data nin/11/,nout/10/,ntty/5/,nrsppe/25/,nrspfe/26/,meontr/35/
     .     ,lfile/36/,neqdsk/38/,nffile/40/,nsave/49/,kltype/-1/
     .     ,nttyo/6/
      data tmu/2.0e-07/,reentr/1.6955/

c-----------------------------Executable code begins here-----------------

d     print*,' Entered routine WEQDSK which is called from pmedinit'
d	  print*,' which is in plotmed205.f'
      pi = 3.1415926535897932d0
      ier = 0
      ixray=0
      ierchk=0
      itek=4
      twopi=2.0*pi
      ioption = 1

c if called from pmedinit then ifnamein= ifname2= g + ifname= g+ well.= gwell.
c this ifname is stored from scanned input file in subroutine rdpar

      open(unit=neqdsk,file=ifnamein,status='old',err=2030)
      
	  READ(neqdsk, '(6a8,3i4)') (case(i),i=1,6),imfit,mw,mh
d     write (8, 4000) (case(i), i=1,6)
d 4000 format(' Case=', 6a10)
d     print*,'case(1)',case(1)
d	  print*,'case(2)',case(2)
d	  print*,'case(3)',case(3)
d	  print*,'case(4)',case(4)
d	  print*,'case(5)',case(5)
d	  print*,'case(6)',case(6)
d     print*,'imfit= ',imfit
d	  print*,'mw= ',mw
d	  print*,'mh= ',mh

      READ(neqdsk, '(5e16.9)') xdim,zdim,rzero,rgrid(1),zmid
d	  print*,'xdim= ',xdim
d	  print*,'ydim= ',ydim
d	  print*,'rzero= ',rzero 
d     print*,'rgrid(1)= ',rgrid(1)
d	  print*,'zmid= ',zmid
d	  print*,'mw= ',mw
d	  print*,'mh= ',mh

      READ(neqdsk, '(5e16.9)') rmaxis,zmaxis,ssimag,ssibry,bzero
d     print*,'rmaxis= ',rmaxis 
d	  print*,'zmaxis= ',zmaxis 
d	  print*,'mw= ',mw 
d	  print*,'mh= ',mh

      READ(neqdsk, '(5e16.9)') piii,xdum,xdum,rmaxis,xdum
d     print*,'xdum= ',xdum
d	  print*,'mw= ',mw
d	  print*,'mh= ',mh

      READ(neqdsk, '(5e16.9)') zmaxis,xdum,sdum,xdum,xdum
d     print*,'zmaxis= ',zmaxis
d	  print*,'mw= ',mw
d	  print*,'mh= ',mh

      READ(neqdsk, '(5e16.9)') (fpol(i),i=1,mw)
d	  print*,'fpol(1)= ',fpol(1)
d	  print*,'mw= ',mw
d     print*,'mh= ',mh

      READ(neqdsk, '(5e16.9)') (pres(i),i=1,mw) 
d	  print*,'PRES(1)= ',pres(1) 
d	  print*,'mw= ',mw
d     print*,'mh= ',mh

      READ(neqdsk, '(5e16.9)') (workk(i),i=1,mw) 
d	  print*,'workk(1)= ',workk(1)
d     print*,'mw= ',mw
d     print*,'mh= ',mh

      drgrid=xdim/float(mw-1)
      dzgrid=zdim/float(mh-1)
      do 200 i=1,mw
        rgrid(i)=rgrid(1)+(i-1)*drgrid
  200 continue
      do 220 i=1,mh
        zgrid(i)=zmid-zdim/2.+(i-1)*dzgrid
  220 continue
      darea=drgrid*dzgrid
      do 310 i=1,mw
        if (imfit.ge.0) ffprim(i)=-workk(i)/(twopi*tmu)
        if (imfit.lt.0) ffprim(i)=-workk(i)
  310 continue
      READ(neqdsk, '(5e16.9)') (workk(i),i=1,mw)
      do 315 i=1,mw
        pprime(i)=-workk(i)
  315 continue

d     print*,'Finished reading PPRIME'  
d	  print*,'mw= ',mw
d	  print*,'mh= ',mh

      READ(neqdsk, '(5e16.9)') ((psirz(i,j),i=1,mw),j=1,mh)


      do 400 i=1,mw
        do 400 j=1,mh
          kk=(i-1)*mh+j
          psi(kk)=psirz(i,j)
400   continue
      simag=ssimag
      psibry=ssibry
      sifm=simag
      sifb=psibry

      ioption=1
      if (ioption.gt.0.or.idolim.gt.0) then
d	  print*,'Starting to read QPSI' 
d	  print*,'mw= ',mw

        READ(neqdsk, '(5e16.9)') (qpsi(i),i=1,mw)

        READ(neqdsk, '(2i5)') nbdry,limitr
d       print*,'nbdry= ',nbdry
d		print*,'limitr= ',limitr

        READ(neqdsk, '(5e16.9)') (rbdry(i),zbdry(i),i=1,nbdry)
        READ(neqdsk, '(5e16.9)') (xlim(i),ylim(i),i=1,limitr)
c       READ(neqdsk,out1)

        xlmin=xlim(1)
        xlmax=xlmin
        ylmin=ylim(1)
        ylmax=ylmin
        do 22140 i=2,limitr
          xlmin=min(xlmin,xlim(i))
          xlmax=max(xlmax,xlim(i))
          ylmin=min(ylmin,ylim(i))
          ylmax=max(ylmax,ylim(i))
22140   continue
      endif
      close(unit=neqdsk)

      dxsi=1./float(mw-1)
      do 750 i=1,mw
        xsi(i)=(i-1)*dxsi
        xxxsi(i)=xsi(i)
  750 continue

c************************************

30900 close(unit=neqdsk)

      xguess=(rgrid(1)+rgrid(mw))/2.
      radum=(xguess+xlmin)/2.
      if (piii.le.-1.e3) then
        negcur=1
d	  print*,'negcur= ',negcur
      else
        negcur=0
d		print*,'negcur= ',negcur
      endif

c--------------------------This code should never execute, since ioption=1-----
c------------------------------------------------------------------------------
c------------------------------------------------------------------------------
	  if (ioption.le.0) then
	    print*,'(1) this should not be printing b/c ioption=1'
        xmin=rbdry(1)
        xmax=rbdry(1)
        ymin=zbdry(1)
        ymax=zbdry(1)
        do i=2,nbdry
          xmin=min(rbdry(i),xmin)
          xmax=max(rbdry(i),xmax)
          ymin=min(zbdry(i),ymin)
          ymax=max(zbdry(i),ymax)
        enddo
c			zpline(mw,xsi,ffprim,bfp,cfp,dfp)
c        call zpline(mw,xsi,pprime,bpp,cpp,dpp)
c        call zpline(mw,xsi,pres,bpr,cpr,dpr)
        if (kvtor.gt.0) then
c          call zpline(mw,xsi,preswp,bprwp,cprwp,dprwp)
c          call zpline(mw,xsi,presw,bprw,cprw,dprw)
        endif
        j=(zmaxis-zgrid(1))/dzgrid+1
        do 800 i=1,mw
          curmid(i)=0.0
          pr(i)=0.
          cwrmid(i)=0.0
          prw(i)=0.
          if ((rgrid(i).lt.xmin).or.(rgrid(i).gt.xmax)) goto 800
          kk=(i-1)*mh+j
          sinow=(psi(kk)-simag)/(psibry-simag)
          if ((sinow.lt.0).or.(sinow.ge.1.)) go to 800
          ppx=seval(mw,sinow,xsi,pprime,bpp,cpp,dpp)
          fpx=seval(mw,sinow,xsi,ffprim,bfp,cfp,dfp)
          curmid(i)=rgrid(i)*ppx+fpx/rgrid(i)
          pr(i)=seval(mw,sinow,xsi,pres,bpr,cpr,dpr)
          prp(i)=ppx
          ffp(i)=fpx
          if (kvtor.eq.1) then
            ppw=seval(mw,sinow,xsi,preswp,bprwp,cprwp,dprwp)
            prw(i)=seval(mw,sinow,xsi,presw,bprw,cprw,dprw)
            rvnow=(rgrid(i)/rvtor)**2-1.
            pr(i)=pr(i)+prw(i)*rvnow
            cwrmid(i)=rgrid(i)*ppw*rvnow
            curmid(i)=curmid(i)+cwrmid(i)
            cwrmid(i)=cwrmid(i)/1000.
          elseif (kvtor.eq.11.or.kvtor.eq.3) then
            ppw=seval(mw,sinow,xsi,preswp,bprwp,cprwp,dprwp)
            prw(i)=seval(mw,sinow,xsi,presw,bprw,cprw,dprw)
            rvnow=(rgrid(i)/rvtor)**2-1.
            pres0=pr(i)
            prew0=prw(i)
            if (abs(pres0).gt.1.e-10) then
               pwop0=prew0/pres0
               ptop0=exp(pwop0*rvnow)
            else
               pwop0=0.0
               ptop0=1.0
            endif
            cwrmid(i)=rgrid(i)*ppw*rvnow*ptop0
            pp0=ppx*(1.-pwop0*rvnow)
            curmid(i)=fpx/rgrid(i)+pp0*rgrid(i)*ptop0
     .                           +cwrmid(i)
            cwrmid(i)=cwrmid(i)/1000.
          endif
          curmid(i)=curmid(i)/1000.
  800   continue
        print*,'(2) this should not be printing b/c ioption=1'
        delerr=0.0
        tmu0=twopi*tmu
        do 850 i=1,mw
          do 850 j=1,mh
            kk=(i-1)*mh+j
            wpsi(kk)=0.
            pcurrt(kk)=0.0
            pressu(kk)=0.0
            pressw(kk)=0.0
            if ((rgrid(i).lt.xmin).or.(rgrid(i).gt.xmax)) goto 850
            if ((zgrid(j).lt.ymin).or.(zgrid(j).gt.ymax)) goto 850
            sinow=(psi(kk)-simag)/(psibry-simag)
            wpsi(kk)=1.0
            if ((sinow.lt.0).or.(sinow.ge.1.)) go to 850
            ppx=seval(mw,sinow,xsi,pprime,bpp,cpp,dpp)
            fpx=seval(mw,sinow,xsi,ffprim,bfp,cfp,dfp)
            pcurrt(kk)=rgrid(i)*ppx+fpx/rgrid(i)
            prnow=seval(mw,sinow,xsi,pres,bpr,cpr,dpr)
            pres0=prnow
            pressu(kk)=prnow
            if (kvtor.eq.1) then
              prwnow=seval(mw,sinow,xsi,presw,bprw,cprw,dprw)
              ppw=seval(mw,sinow,xsi,preswp,bprwp,cprwp,dprwp)
              rvnow=(rgrid(i)/rvtor)**2-1.
              pressu(kk)=prnow+prwnow*rvnow
              pressw(kk)=prwnow
              cwrnow   =rgrid(i)*ppw*rvnow
              pcurrt(kk)=pcurrt(kk)+cwrnow
            elseif (kvtor.eq.11.or.kvtor.eq.3) then
              prew0=seval(mw,sinow,xsi,presw,bprw,cprw,dprw)
              rvnow=(rgrid(i)/rvtor)**2-1.
              if (abs(pres0).gt.1.e-10) then
                pwop0=prew0/pres0
                ptop0=exp(pwop0*rvnow)
              else
                pwop0=0.0
                ptop0=1.0
              endif
              pressu(kk)=pres0*ptop0
              ppw=seval(mw,sinow,xsi,preswp,bprwp,cprwp,dprwp)
              pp0=ppx*(1.-pwop0*rvnow)
              ppw=ppw*rvnow
              pcurrt(kk)=pcurrt(kk)-rgrid(i)*ppx
     .                +(pp0+ppw)*rgrid(i)*ptop0
              print*,'(3) this should not be printing b/c ioption=1'
			endif
c--------------------------------------------------------------------------
c--  evaluate -del*psi/R/mu0                                             --
c--------------------------------------------------------------------------
			if (i.eq.1.or.i.eq.mw) goto 850
            if (j.eq.1.or.j.eq.mh) goto 850
            kip=i*mh+j
            kim=(i-2)*mh+j
            kjp=(i-1)*mh+j+1
            kjm=(i-1)*mh+j-1
            if (sinow.gt.0.999) go to 850
            d2sidr2=(psi(kip)-2.*psi(kk)+psi(kim))/drgrid**2
            d2sidz2=(psi(kjp)-2.*psi(kk)+psi(kjm))/dzgrid**2
            dsidr=(psi(kip)-psi(kim))/2./drgrid
            delssi=d2sidr2-dsidr/rgrid(i)+d2sidz2
            delssi=-delssi/rgrid(i)/tmu0
            pcnow=pcurrt(kk)
            delerrx=abs(delssi-pcnow)
            delerr=max(delerrx,delerr)
  850   continue
        call zpline(mw,xsi,qpsi,bqpsi,cqpsi,dqpsi)
        qout95=seval(mw,0.95,xsi,qpsi,bqpsi,cqpsi,dqpsi)
      endif
c-------------------------------End of ioption=0 code--------------------------
c------------------------------------------------------------------------------
c------------------------------------------------------------------------------

      if (ipitch.le.0.and.ioption.eq.0) return
      
	  rangle=(xlmin+xlmax)/2.
      rangle=rcentr
      do 1000 i=1,mw
        do 1000 j=1,mh
          kk=(i-1)*mh+j
          copy(i,j)=psi(kk)
 1000 continue
c----------------------------------------------------------------------
c--   fit 2-d zpline to psi                                          --
c----------------------------------------------------------------------
c     call ibcccu(copy,rgrid,mw,zgrid,mh,c,nw,wk,ier)
      call sets2d(psi,c,rgrid,mw,bkx,lkx,zgrid,mh,bky,lky,wk,ier)
      if (ioption.gt.0) then
        mwfpol=mw
        call zpline(mwfpol,xxxsi,fpol,bfpol,cfpol,dfpol)
      endif
      if (ipitch.le.0) return
      do 1005 i=2,limitr
        delx=(xlim(i)-xlim(i-1))/4.
        dely=(ylim(i)-ylim(i-1))/4.
        do 1005 k=1,4
          xwant=xlim(i-1)+(k-1)*delx
          ywant=ylim(i-1)+(k-1)*dely
c         call dbcevl(rgrid,mw,zgrid,mh,c,nw,xwant,ywant,pds,ier) 
          call seva2d(bkx,lkx,bky,lky,c,mw,mh,xwant,ywant,pds,ier,n333)
          abpolz=pds(2)/xwant
          abpolr=-pds(3)/xwant
          kk=(i-2)*4+k
          delxn=-dely
          delyn=delx
          bpoln=(abpolr*delxn+abpolz*delyn)/sqrt(delxn**2+delyn**2)
          btor=fpol(mw)/xwant
          tanbn(kk)=bpoln/btor
c          angbn(kk)=atan2d(ywant,(rangle-xwant))
c          if (angbn(kk).lt.0.0) angbn(kk)=angbn(kk)+360.
          sisibn(kk)=(pds(1)-simag)/(psibry-simag)
c          write (99,*) xwant,ywant,angbn(kk),tanbn(kk),bpoln,btor

 1005 continue
 
c     angbn(kk+1)=360.
      tanbn(kk+1)=tanbn(1)
      sisibn(kk+1)=sisibn(1)
	  
      continue
c     leaving WEQDSK

      return

 2030 continue
d     print *, ' **G EQDSK file is missing: ', ifnamein
      
	  stop


      end
